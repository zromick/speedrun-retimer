{"version":3,"sources":["styling.module.scss","components/RetimingButtons.tsx","components/RetimerBase.tsx","components/RetimerBaseContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","RetimingButtons","props","stepBy","Grid","container","item","justify","Button","variant","onClick","RetimerBase","setURL","loadVideo","setStart","setEnd","setCopied","url","copied","startTime","endTime","currentTime","currentFrame","xs","className","styles","basicMargin","Typography","videoURLWidth","TextField","label","value","id","onChange","event","target","fullWidth","color","Snackbar","open","autoHideDuration","onClose","message","RetimerBaseContainer","useState","setStartTime","setEndTime","setCurrentTime","setCurrentFrame","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","videoDiv","getElementById","player","seekTo","timestamp","pauseVideo","getCurrentTime","playVideo","updateCurrentTime","myTime","Math","floor","updateTotalTime","timeDiff","frames","minutes","seconds","ms","round","msString","secondsString","minutesString","hoursString","youtube","updateCurrentTimeSpan","console","log","onYouTubePlayerAPIReady","YT","Player","width","height","videoId","events","onYoutubeReady","setInterval","videoUrl","reg1","match","length","reg2","reg3","parseYoutubeId","amount","millis","number","max","toString","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1fd8a070.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicMargin\":\"styling_basicMargin__4z9DT\",\"videoURLWidth\":\"styling_videoURLWidth__3FHLO\"};","import React from 'react';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nexport interface RetimingButtonProps {\r\n  stepBy: (frames: number) => void;\r\n}\r\n\r\nconst RetimingButtons = (props: RetimingButtonProps) => {\r\n  const { stepBy } = props;\r\n  return (\r\n    <Grid container item justify=\"center\">\r\n      <Button variant=\"contained\" onClick={() => stepBy(5000)}>+5000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(1000)}>+1000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(500)}>+500</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(100)}>+100</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(50)}>+50</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(10)}>+10</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(5)}>+5</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(1)}>+1</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-5000)}>-5000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-1000)}>-1000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-500)}>-500</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-100)}>-100</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-50)}>-50</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-10)}>-10</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-5)}>-5</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-1)}>-1</Button>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default RetimingButtons;\r\n\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\nimport { Snackbar, TextField, Button, Grid, Typography } from '@material-ui/core';\r\nimport styles from '../styling.module.scss';\r\nimport RetimingButtons from './RetimingButtons';\r\n\r\nexport interface RetimerBaseProps {\r\n  setURL: Dispatch<SetStateAction<string>>,\r\n  loadVideo: () => void,\r\n  stepBy: (frames: number) => void,\r\n  setStart: () => void,\r\n  setEnd: () => void,\r\n  setCopied: Dispatch<SetStateAction<boolean>>,\r\n  url: string,\r\n  copied: boolean,\r\n  startTime: number,\r\n  endTime: number,\r\n  currentTime: number,\r\n  currentFrame: number,\r\n}\r\n\r\nconst RetimerBase = (props: RetimerBaseProps) => {\r\n  const {\r\n    setURL,\r\n    loadVideo,\r\n    stepBy,\r\n    setStart,\r\n    setEnd,\r\n    setCopied,\r\n    url,\r\n    copied,\r\n    startTime,\r\n    endTime,\r\n    currentTime,\r\n    currentFrame,\r\n  } = props;\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid container item xs={10} justify=\"center\">\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Typography variant=\"h4\">Speedrun Retimer</Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.videoURLWidth}>\r\n            <TextField\r\n              label=\"Video URL\"\r\n              value={url}\r\n              id=\"url\"\r\n              onChange={(event) => setURL(event.target.value)}\r\n              fullWidth\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => loadVideo()}\r\n            >\r\n              Load Video\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div id=\"video-div\" className={styles.basicMargin}>\r\n            <div></div>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Typography variant=\"h6\">Step Forwards or Backwards:</Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <RetimingButtons stepBy={stepBy} />\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Typography id=\"current-time\">Current time: {currentTime} ms</Typography>\r\n            <Typography id=\"current-time\">Current frame: {currentFrame}</Typography>\r\n            <TextField\r\n              label=\"Start Time\"\r\n              value={startTime}\r\n              id=\"start-time\"\r\n              fullWidth\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => setStart()}\r\n            >\r\n              Set Start Time\r\n            </Button>\r\n            <TextField\r\n              label=\"End Time\"\r\n              value={endTime}\r\n              id=\"end-time\"\r\n              fullWidth\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => setEnd()}\r\n            >\r\n              Set End Time\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => setCopied(true)}\r\n            >\r\n              Copy Mod Message\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Snackbar\r\n          open={copied}\r\n          autoHideDuration={10000}\r\n          onClose={() => setCopied(false)}\r\n          message=\"Copied! Please paste the mod message into the comment of the run you are verifying.\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default RetimerBase;","import React, { useState } from 'react';\r\nimport RetimerBase from './RetimerBase';\r\n\r\nconst RetimerBaseContainer = () => {\r\n\r\n  const [url, setURL] = useState(\"\");\r\n  const [copied, setCopied] = useState(false);\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [endTime, setEndTime] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [currentFrame, setCurrentFrame] = useState(0);\r\n\r\n  const parseYoutubeId = (videoUrl: string) => {\r\n    let reg1 = videoUrl.match(/youtube\\..+?\\/watch.*?v=(.*?)(?:&|\\/|$)/);\r\n    if (reg1 && reg1.length >= 2) {\r\n      return reg1[1];\r\n    }\r\n\r\n    let reg2 = videoUrl.match(/youtu\\.be\\/(.*?)(?:\\?|&|\\/|$)/);\r\n    if (reg2 && reg2.length >= 2) {\r\n      return reg2[1];\r\n    }\r\n\r\n    let reg3 = videoUrl.match(/youtube\\..+?\\/embed\\/(.*?)(?:\\?|&|\\/|$)/);\r\n    if (reg3 && reg3.length >= 2) {\r\n      return reg3[1];\r\n    }\r\n\r\n    return videoUrl;\r\n  }\r\n\r\n  const loadVideo = () => {\r\n    let id = parseYoutubeId(url);\r\n    onYouTubePlayerAPIReady(id);\r\n  }\r\n\r\n  const integerify = (number: number) => {\r\n    if (number.toString().match(/[0-9]+\\.[0-9]9[0-9]+/)) {\r\n      return Math.floor(number * 10) / 10 + 0.1;\r\n    } else if (number.toString().match(/[0-9]+\\.[0-9][0-9]9[0-9]+/)) {\r\n      return Math.floor(number * 100) / 100 + 0.01;\r\n    }\r\n    else if (number === 0.5833333333333333) return 0.59;\r\n    else return number;\r\n\r\n  }\r\n  // Load URL Params\r\n  function getParameterByName(name: string, url = window.location.href) {\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n  }\r\n\r\n  // Load the IFrame Player API code asynchronously.\r\n  let tag = document.createElement('script');\r\n  tag.src = \"https://www.youtube.com/iframe_api\";\r\n  let firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\r\n\r\n  // Load page elements\r\n  let videoDiv = document.getElementById('video-div');\r\n\r\n  // Create page letiables\r\n  let framerate = 60;\r\n\r\n  // Fallback Player\r\n  let player = {\r\n    seekTo: function (timestamp: number) {\r\n    },\r\n    pauseVideo: function () {\r\n    },\r\n    getCurrentTime: function () {\r\n    },\r\n    playVideo: function () {\r\n    }\r\n  };\r\n\r\n  // const validateFramerate = () => {\r\n  //   framerate = parseInt(document.getElementById(\"framerate\").value || \"60\");\r\n  // }\r\n\r\n  const updateCurrentTime = () => {\r\n    let myTime: any = player.getCurrentTime();\r\n    setCurrentTime(Math.floor(myTime * 1000));\r\n    setCurrentFrame(Math.floor(myTime * framerate));\r\n  }\r\n\r\n  const setTime = (millis: number) => {\r\n    console.log(millis, `in setTime`)\r\n    player.pauseVideo();\r\n    player.seekTo(millis);\r\n  }\r\n\r\n  const stepBy = (amount: number) => {\r\n    player.pauseVideo();\r\n    updateCurrentTime();\r\n    setTime(Math.max(0, integerify(currentFrame / framerate + amount * (1 / framerate))));\r\n  }\r\n\r\n  function updateTotalTime() {\r\n    if (startTime !== null && endTime !== null) {\r\n      let timeDiff = endTime - startTime;\r\n      let timeStr = \"\";\r\n\r\n      // handle negative time I guess\r\n      if (timeDiff < 0) {\r\n        timeStr += \"-\";\r\n        timeDiff *= -1;\r\n      }\r\n\r\n      let frames = (timeDiff / 1000) * framerate;\r\n\r\n      let minutes = 0;\r\n      let seconds = Math.floor(frames / framerate);\r\n      frames %= framerate;\r\n      let ms = Math.round(frames / framerate * 1000);\r\n      let msString = \"\", secondsString = \"\", minutesString = \"\", hoursString = \"\";\r\n      if (ms < 10) {\r\n        msString = '00' + ms;\r\n      } else if (ms < 100) {\r\n        msString = '0' + ms;\r\n      }\r\n      if (seconds >= 60) {\r\n        minutes = Math.floor(seconds / 60);\r\n        seconds = seconds % 60;\r\n        secondsString = seconds < 10 ? '0' + seconds : '' + seconds;\r\n      }\r\n      if (minutes >= 60) {\r\n        hoursString = '' + Math.floor(minutes / 60);\r\n        minutes = minutes % 60;\r\n        minutesString = minutes < 10 ? '0' + minutes : '' + minutes;\r\n      }\r\n\r\n      timeStr += hoursString + 'h ' + minutesString + 'm ' + secondsString + 's ' + msString + 'ms';\r\n    }\r\n  }\r\n\r\n  const setStart = () => {\r\n    updateCurrentTime();\r\n    setStartTime(currentTime);\r\n    updateTotalTime();\r\n  }\r\n\r\n  const setEnd = () => {\r\n    updateCurrentTime();\r\n    setEndTime(currentTime);\r\n    updateTotalTime();\r\n  }\r\n\r\n  const updateCurrentTimeSpan = () => {\r\n    updateCurrentTime();\r\n    console.log(currentTime, currentFrame);\r\n  }\r\n\r\n  const onPlayerReady = () => {\r\n    videoDiv = document.getElementById('video-div');\r\n    player.playVideo();\r\n    setInterval(updateCurrentTimeSpan, 50);\r\n\r\n  }\r\n\r\n  // Load the player.\r\n  let youtube: YT.Player;\r\n\r\n  const onYouTubePlayerAPIReady = (id: string) => {\r\n    youtube = new YT.Player(videoDiv, {\r\n      width: 640,\r\n      height: 360,\r\n      videoId: id,\r\n      events: {\r\n        'onReady': onYoutubeReady\r\n      }\r\n    });\r\n  }\r\n\r\n  const onYoutubeReady = () => {\r\n    player = {\r\n      seekTo: function (timestamp) {\r\n        youtube.seekTo(timestamp, true);\r\n      },\r\n      pauseVideo: function () {\r\n        youtube.pauseVideo();\r\n      },\r\n      getCurrentTime: function () {\r\n        return youtube.getCurrentTime();\r\n      },\r\n      playVideo: function () {\r\n        youtube.playVideo();\r\n      }\r\n    };\r\n    onPlayerReady();\r\n  }\r\n\r\n\r\n  return (\r\n    <RetimerBase\r\n      setURL={setURL}\r\n      loadVideo={loadVideo}\r\n      stepBy={stepBy}\r\n      setStart={setStart}\r\n      setEnd={setEnd}\r\n      setCopied={setCopied}\r\n      url={url}\r\n      copied={copied}\r\n      startTime={startTime}\r\n      endTime={endTime}\r\n      currentTime={currentTime}\r\n      currentFrame={currentFrame}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RetimerBaseContainer;","import React from 'react';\r\nimport RetimerBaseContainer from './components/RetimerBaseContainer';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <RetimerBaseContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}