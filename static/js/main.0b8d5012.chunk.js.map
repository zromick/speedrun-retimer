{"version":3,"sources":["styling.module.scss","components/RetimingButtons.tsx","components/RetimerBase.tsx","components/RetimerBaseContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","RetimingButtons","props","stepBy","Grid","container","item","justify","Button","variant","onClick","RetimerBase","getVideo","redirect","url","copied","videoLoaded","xs","className","styles","basicMargin","Typography","videoURLWidth","TextField","label","value","id","onChange","event","fullWidth","color","Snackbar","open","message","RetimerBaseContainer","useState","setURL","setCopied","target","window","location","href","videoUrl","reg1","match","length","reg2","reg3","parseYoutubeId","frames","App","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,cAAgB,iC,kNC8B9DC,EAxBS,SAACC,GACvB,IAAQC,EAAWD,EAAXC,OACR,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,QAAQ,UAC3B,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,OAAlD,SACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,OAAlD,SACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,OAAlD,QACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,OAAlD,QACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,MAAlD,OACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,MAAlD,OACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,KAAlD,MACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,EAAO,KAAlD,MACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,OAAnD,SACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,OAAnD,SACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,OAAnD,QACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,OAAnD,QACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,MAAnD,OACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,MAAnD,OACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,KAAnD,MACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMP,GAAQ,KAAnD,QCkDSQ,EA9DK,SAACT,GACnB,IACEU,EAMEV,EANFU,SACAC,EAKEX,EALFW,SACAV,EAIED,EAJFC,OACAW,EAGEZ,EAHFY,IAEAC,GACEb,EAFFc,YAEEd,EADFa,QAEF,OACE,kBAACX,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,UACtB,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACW,GAAI,GAAIV,QAAQ,UACnC,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACW,GAAI,GAAIV,QAAQ,UACnC,yBAAKW,UAAWC,IAAOC,aACrB,kBAACC,EAAA,EAAD,CAAYZ,QAAQ,MAApB,sBAGJ,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACW,GAAI,GAAIV,QAAQ,UACnC,yBAAKW,UAAWC,IAAOG,eACrB,kBAACC,EAAA,EAAD,CACEC,MAAM,YACNC,MAAOX,EACPY,GAAG,MACHC,SAAU,SAACC,GAAD,OAAWhB,EAASgB,IAC9BC,WAAS,MAIf,kBAACzB,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACW,GAAI,GAAIV,QAAQ,UACnC,yBAAKW,UAAWC,IAAOC,aACrB,kBAACZ,EAAA,EAAD,CACEsB,MAAM,UACNrB,QAAQ,YACRC,QAAS,kBAAMG,MAHjB,gBASJ,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACW,GAAI,GAAIV,QAAQ,UACnC,yBAAKmB,GAAG,YAAYR,UAAWC,IAAOC,eAExC,kBAAChB,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACW,GAAI,GAAIV,QAAQ,UACnC,yBAAKW,UAAWC,IAAOC,aACrB,kBAACC,EAAA,EAAD,CAAYZ,QAAQ,MAApB,iCAGJ,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACW,GAAI,GAAIV,QAAQ,UACnC,yBAAKW,UAAWC,IAAOC,aACrB,kBAAC,EAAD,CAAiBjB,OAAQA,MAI7B,kBAAC4B,EAAA,EAAD,CACEC,KAAMjB,EACNkB,QAAQ,oHCjBHC,EAjDc,WAE3B,MAAsBC,mBAAS,IAA/B,mBAAOrB,EAAP,KAAYsB,EAAZ,KACA,EAAsCD,oBAAS,GAA/C,mBAAOnB,EAAP,KACA,GADA,KAC4BmB,oBAAS,IAArC,mBAAOpB,EAAP,KAAesB,EAAf,KAiCA,OACE,kBAAC,EAAD,CACEzB,SAda,SAACgB,GAChBQ,EAAOR,EAAMU,OAAOb,QAclBZ,SAXa,WACf0B,OAAOC,SAASC,KAAO,wBAxBzB,SAAwBC,GACtB,IAAIC,EAAOD,EAASE,MAAM,2CAC1B,GAAID,GAAQA,EAAKE,QAAU,EACzB,OAAOF,EAAK,GAGd,IAAIG,EAAOJ,EAASE,MAAM,iCAC1B,GAAIE,GAAQA,EAAKD,QAAU,EACzB,OAAOC,EAAK,GAGd,IAAIC,EAAOL,EAASE,MAAM,2CAC1B,OAAIG,GAAQA,EAAKF,QAAU,EAClBE,EAAK,GAGPL,EAQ0CM,CAAelC,IAW9DX,OARW,SAAC8C,GACdZ,GAAU,IAQRvB,IAAKA,EACLE,YAAaA,EACbD,OAAQA,KC/BCmC,E,4JAXX,WACI,OACI,6BACI,6BACI,kBAAC,EAAD,Y,GANFC,IAAMC,WCCxBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.0b8d5012.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicMargin\":\"styling_basicMargin__4z9DT\",\"videoURLWidth\":\"styling_videoURLWidth__3FHLO\"};","import React from 'react';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\nexport interface RetimingButtonProps {\r\n  stepBy: (frames: number) => void;\r\n}\r\n\r\nconst RetimingButtons = (props: RetimingButtonProps) => {\r\n  const { stepBy } = props;\r\n  return (\r\n    <Grid container item justify=\"center\">\r\n      <Button variant=\"contained\" onClick={() => stepBy(5000)}>+5000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(1000)}>+1000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(500)}>+500</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(100)}>+100</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(50)}>+50</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(10)}>+10</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(5)}>+5</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(1)}>+1</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-5000)}>-5000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-1000)}>-1000</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-500)}>-500</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-100)}>-100</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-50)}>-50</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-10)}>-10</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-5)}>-5</Button>\r\n      <Button variant=\"contained\" onClick={() => stepBy(-1)}>-1</Button>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default RetimingButtons;\r\n\r\n/*\r\n\r\n<br>\r\n              Current Time (in milliseconds): <span id=\"current-time\">0</span>\r\n<br>\r\n                Current Frame: <span id=\"current-frame\">0</span>\r\n<br>\r\n        <input type=\"hidden\" id=\"start-value\" name=\"startValue\" value=\"\" />\r\n        Start Time: <span id=\"start\">Not set</span>\r\n        <input id='set-start' type=\"button\" value=\"Set current time as start\" onclick=\"setStart()\" />\r\n        <input id='go-to-start' type=\"button\" value=\"Go to start time\" onclick=\"goToStart()\" style=\"visibility: hidden\" />\r\n\r\n    <div>\r\n           <input type=\"hidden\" id=\"end-value\" name=\"endValue\" value=\"\" />\r\n        End Time: <span id=\"end\">Not set</span>\r\n        <input id='set-end' type=\"button\" value=\"Set current time as end\" onclick=\"setEnd()\" />\r\n        <input id='go-to-end' type=\"button\" value=\"Go to end time\" onclick=\"goToEnd()\" style=\"visibility: hidden\" />\r\n    </div>\r\n    <div>\r\n                    Total Time: <span id=\"total-time\">Please set a start and end time</span>\r\n\r\n\r\n    </div>\r\n            <div>\r\n            <button id='save-run' type=\"submit\" style=\"visibility: hidden\">Save Run</button>\r\n        </div>\r\n\r\n\r\n        */","import React from 'react';\r\nimport { Snackbar, TextField, Button, Grid, Typography } from '@material-ui/core';\r\nimport styles from '../styling.module.scss';\r\nimport RetimingButtons from './RetimingButtons';\r\n\r\nexport interface RetimerBaseProps {\r\n  getVideo: (event: any) => void,\r\n  redirect: () => void,\r\n  stepBy: (frames: number) => void,\r\n  url: string,\r\n  videoLoaded: boolean,\r\n  copied: boolean,\r\n}\r\n\r\nconst RetimerBase = (props: RetimerBaseProps) => {\r\n  const {\r\n    getVideo,\r\n    redirect,\r\n    stepBy,\r\n    url,\r\n    videoLoaded,\r\n    copied,\r\n  } = props;\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid container item xs={10} justify=\"center\">\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Typography variant=\"h4\">Speedrun Retimer</Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.videoURLWidth}>\r\n            <TextField\r\n              label=\"Video URL\"\r\n              value={url}\r\n              id=\"url\"\r\n              onChange={(event) => getVideo(event)}\r\n              fullWidth\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => redirect()}\r\n            >\r\n              Load Video\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div id=\"video-div\" className={styles.basicMargin} />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <Typography variant=\"h6\">Step Forwards or Backwards:</Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <div className={styles.basicMargin}>\r\n            <RetimingButtons stepBy={stepBy} />\r\n          </div>\r\n        </Grid>\r\n\r\n        <Snackbar\r\n          open={copied}\r\n          message=\"The mod message has been copied to clipboard! Please paste it into the comment of the run you are verifying.\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default RetimerBase;","import React, { useState } from 'react';\r\nimport RetimerBase from './RetimerBase';\r\n\r\nconst RetimerBaseContainer = () => {\r\n\r\n  const [url, setURL] = useState(\"\");\r\n  const [videoLoaded, setVideoLoaded] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  function parseYoutubeId(videoUrl: string) {\r\n    var reg1 = videoUrl.match(/youtube\\..+?\\/watch.*?v=(.*?)(?:&|\\/|$)/);\r\n    if (reg1 && reg1.length >= 2) {\r\n      return reg1[1];\r\n    }\r\n\r\n    var reg2 = videoUrl.match(/youtu\\.be\\/(.*?)(?:\\?|&|\\/|$)/);\r\n    if (reg2 && reg2.length >= 2) {\r\n      return reg2[1];\r\n    }\r\n\r\n    var reg3 = videoUrl.match(/youtube\\..+?\\/embed\\/(.*?)(?:\\?|&|\\/|$)/);\r\n    if (reg3 && reg3.length >= 2) {\r\n      return reg3[1];\r\n    }\r\n\r\n    return videoUrl;\r\n  }\r\n\r\n  const getVideo = (event: any) => {\r\n    setURL(event.target.value);\r\n  }\r\n\r\n  const redirect = () => {\r\n    window.location.href = \"/speedrun-retimer?id=\" + parseYoutubeId(url);\r\n  }\r\n\r\n  const stepBy = (frames: number) => {\r\n    setCopied(true);\r\n  }\r\n\r\n  return (\r\n    <RetimerBase\r\n      getVideo={getVideo}\r\n      redirect={redirect}\r\n      stepBy={stepBy}\r\n      url={url}\r\n      videoLoaded={videoLoaded}\r\n      copied={copied}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RetimerBaseContainer;","import React from 'react';\r\nimport RetimerBaseContainer from './components/RetimerBaseContainer';\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <RetimerBaseContainer />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}